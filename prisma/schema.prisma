datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id            Int          @id @default(autoincrement()) // Auto-incrementing primary key
  username      String       @unique
  password      String?
  rank          Int? // Optional rank
  speed         Int? // Optional speed
  lastEntryDate DateTime? // Optional last entry date (converted to DateTime)
  typingStats   TypingStat[] // One-to-many relationship with TypingStat model
  settings      Settings? // Optional one-to-one relationship with Settings model
}

model TypingStat {
  id       Int    @id @default(autoincrement()) // Auto-incrementing primary key
  accuracy Float? // Field for typing accuracy
  speed    Int // Field for words per minute (WPM)
  userId   Int // Foreign key to reference the User model
  user     User   @relation(fields: [userId], references: [id]) // Relationship to User model
}

model Settings {
  id              Int      @id @default(autoincrement()) // Auto-incrementing primary key
  language        String? // Optional language setting
  mode            String? // Optional mode setting
  difficultyLevel String? // Optional difficulty level
  textLength      Int? // Optional length of the text (as an integer)
  soundEffects    Boolean? // Optional setting for sound effects

  user   User @relation(fields: [userId], references: [id]) // Relationship to User model
  userId Int  @unique // Add @unique to enforce one-to-one relationship
}

model Room {
  id          Int      @id @default(autoincrement()) 
  roomId      String   @unique
  createdAt   DateTime @default(now()) 
  status      String   // e.g., 'active', 'inactive', 'completed'
  maxPlayers  Int      // Maximum number of players allowed in the room
}
